name: Publish Packages
on:
  pull_request:
    types: [closed]
  workflow_dispatch:
jobs:
  publish_package:
    if: github.event.pull_request.merged == true
    runs-on: "ubuntu-latest"
    steps:
      - name: discern whether committer is human
        id: is-bot-event
        run: echo "::set-output name=value::${{ github.event.pusher.name == 'GHA Bot' }}"
      - name: install node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
          registry-url: "https://registry.npmjs.org"
          scope: "@rentpath"

      - name: set .npmrc for auth
        run: |
          .github/workflows/scripts/setup_npmrc.sh ${GH_TOKEN}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: "clone repo with full history for lerna"
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: get all the tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install
        name: "install dependencies"

        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
      - run: yarn run build
        name: "build packages"

      - run: yarn run lint
        name: "lint"

      - run: yarn run test:coverage
        name: "test"

      - run: yarn run commit:lint
        name: "commitlint"
      - name: "configure git for lerna"
        run: |
          .github/workflows/scripts/setup_lerna.sh ${GH_ACTOR} ${GH_TOKEN}
        env:
          GH_ACTOR: ${{ secrets.GH_ACTOR }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: get branch name without prefix
        id: branch-name
        run: echo "::set-output name=value::$( echo ${{ github.ref }} | sed -E -e 's/refs\/heads\/(.*)/\1/g' -e 's/[\/_]/-/g' )"
      - name: "publish packages"
        run: |
           .github/workflows/scripts/publish_changed_packages.sh
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
